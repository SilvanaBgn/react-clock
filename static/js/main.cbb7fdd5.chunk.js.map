{"version":3,"sources":["components/ClockClass.js","App.js","reportWebVitals.js","index.js","components/ClockClass.module.css","App.module.css"],"names":["ClockClass","props","state","date","Date","toLocaleTimeString","this","setState","console","log","timerID","setInterval","tickClock","clearInterval","className","styles","clockClass","pClock","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4OAoCeA,E,kDAhCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CAACC,MAAM,IAAIC,MAAOC,sBAFf,E,6CAKlB,WACEC,KAAKC,SAAS,CAACJ,MAAM,IAAIC,MAAOC,yB,+BAGlC,WAAqB,IAAD,OAClBG,QAAQC,IAAI,YACZH,KAAKI,QAAUC,aAAY,kBAAM,EAAKC,cAAY,O,gCAEpD,WACEJ,QAAQC,IAAI,qBAAqBH,KAAKJ,MAAMC,Q,kCAE9C,WACEK,QAAQC,IAAI,cACZI,cAAcP,KAAKI,W,oBAGrB,WACE,OACE,sBAAKI,UAAWC,IAAOC,WAAvB,UACE,4CACA,4FACA,mBAAGF,UAAWC,IAAOE,OAArB,SAA8BX,KAAKJ,MAAMC,c,GA3BxBe,IAAMC,W,gBCQhBC,MARf,WACE,OACE,qBAAKN,UAAWC,IAAOK,IAAvB,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,6B,kBCAvED,EAAOC,QAAU,CAAC,IAAM,oB","file":"static/js/main.cbb7fdd5.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './ClockClass.module.css';\n\nclass ClockClass extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {date: new Date().toLocaleTimeString() };\n  }\n\n  tickClock() {\n    this.setState({date: new Date().toLocaleTimeString()})\n  }\n\n  componentDidMount() {\n    console.log('Mounting');\n    this.timerID = setInterval(() => this.tickClock(),1000);\n  }\n  componentDidUpdate(){\n    console.log('Clock was updated:',this.state.date);\n  }\n  componentWillUnmount() {\n    console.log('UNMounting');\n    clearInterval(this.timerID);\n  }\n  \n  render(){\n    return (\n      <div className={styles.clockClass}>\n        <h1>ClockClass</h1>\n        <p>Hello! I'm a clock implemented with a class and setState().</p>\n        <p className={styles.pClock}>{this.state.date}</p>\n      </div>\n    );\n  }\n}\n\nexport default ClockClass;","import ClockClass from './components/ClockClass'\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <ClockClass/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clockClass\":\"ClockClass_clockClass__22jW4\",\"pClock\":\"ClockClass_pClock__2Thja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};"],"sourceRoot":""}